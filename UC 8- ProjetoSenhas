package com.mycompany.projetosenhas;

import javax.swing.JFrame;
import javax.swing.JButton;
import java.awt.Container;
import javax.swing.JOptionPane;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JPasswordField;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;



// Classe ProjetoSenhas que estende a classe JFrame e implementa a interface ActionListener
public class ProjetoSenhas extends JFrame implements ActionListener {
    JButton btOk, btCancela;
    JTextField login; // Campo de texto para o login
    JPasswordField senha; // Campo de senha

    // Construtor da classe
    public ProjetoSenhas() {
        super("Formulário de senhas"); // Chama o construtor da superclasse JFrame com um título

        Container c = getContentPane(); // Obtém o painel de conteúdo do JFrame
        c.setLayout(new GridLayout(3, 2)); // Define o layout do painel de conteúdo como GridLayout com 3 linhas e 2 colunas

        // Adiciona um rótulo "Login" ao painel de conteúdo
        c.add(new JLabel("Login"));

        login = new JTextField(); // Inicializa o campo de texto para o login
        c.add(login); // Adiciona o campo de texto ao painel de conteúdo

        // Adiciona um rótulo "Senha" ao painel de conteúdo
        c.add(new JLabel("Senha"));

        senha = new JPasswordField(); // Inicializa o campo de senha
        c.add(senha); // Adiciona o campo de senha ao painel de conteúdo

        btOk = new JButton("Ok"); // Cria um botão com o texto "Ok"
        c.add(btOk); // Adiciona o botão "Ok" ao painel de conteúdo
        btOk.addActionListener(this); // Registra esta classe como ouvinte de eventos para o botão "Ok"

        btCancela = new JButton("Cancela"); // Cria um botão com o texto "Cancela"
        c.add(btCancela); // Adiciona o botão "Cancela" ao painel de conteúdo
        btCancela.addActionListener(this); // Registra esta classe como ouvinte de eventos para o botão "Cancela"

        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // Define o comportamento padrão ao fechar a janela
        setSize(300, 300); // Define o tamanho da janela
        setVisible(true); // Torna a janela visível
    }

    // Método actionPerformed da interface ActionListener para tratar eventos de botão
    @Override
    public void actionPerformed(ActionEvent e) {
        String s = ""; // Inicializa uma string para armazenar as informações de login e senha

        // Verifica se o evento foi gerado pelo botão "Ok"
        if (e.getSource() == btOk) {
            // Obtém o texto do campo de login e a senha digitada
            s = "Login: " + login.getText() + "\nSenha: " + new String(senha.getPassword());
            // Exibe uma caixa de diálogo com as informações de login e senha
            JOptionPane.showMessageDialog(null, s);
        } else if (e.getSource() == btCancela) {
            // Se o evento foi gerado pelo botão "Cancela", limpa os campos de texto
            login.setText("");
            senha.setText("");
        }
    }

    // Método main para iniciar a aplicação
    public static void main(String[] args) {
        // Cria uma instância da classe ProjetoSenhas (o construtor será chamado automaticamente)
        new ProjetoSenhas();
    }
}



      
